
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  phone: 'phone',
  name: 'name',
  createdAt: 'createdAt',
  creditScore: 'creditScore'
};

exports.Prisma.UpiTransactionScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  type: 'type',
  timestamp: 'timestamp',
  userId: 'userId'
};

exports.Prisma.MobileRechargeScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  timestamp: 'timestamp',
  userId: 'userId'
};

exports.Prisma.CommunityVouchScalarFieldEnum = {
  id: 'id',
  status: 'status',
  createdAt: 'createdAt',
  voucherId: 'voucherId',
  voucheeId: 'voucheeId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  UpiTransaction: 'UpiTransaction',
  MobileRecharge: 'MobileRecharge',
  CommunityVouch: 'CommunityVouch'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "c:\\Hackathon\\Informal-Credit-Score\\backend\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "c:\\Hackathon\\Informal-Credit-Score\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id          String   @id @default(cuid())\n  phone       String   @unique // Phone number is a great unique identifier\n  name        String\n  createdAt   DateTime @default(now())\n  creditScore Float? // The final calculated score\n\n  transactions UpiTransaction[]\n  recharges    MobileRecharge[]\n\n  // Vouching relationships\n  vouchesGiven    CommunityVouch[] @relation(\"Voucher\")\n  vouchesReceived CommunityVouch[] @relation(\"Vouchee\")\n}\n\nmodel UpiTransaction {\n  id        String   @id @default(cuid())\n  amount    Float\n  type      String // \"CREDIT\" or \"DEBIT\"\n  timestamp DateTime @default(now())\n\n  user   User   @relation(fields: [userId], references: [id])\n  userId String\n}\n\nmodel MobileRecharge {\n  id        String   @id @default(cuid())\n  amount    Float\n  timestamp DateTime @default(now())\n\n  user   User   @relation(fields: [userId], references: [id])\n  userId String\n}\n\nmodel CommunityVouch {\n  id        String   @id @default(cuid())\n  status    String   @default(\"PENDING\") // PENDING, APPROVED, REJECTED\n  createdAt DateTime @default(now())\n\n  // The user recieve the vouch\n  voucher   User   @relation(\"Voucher\", fields: [voucherId], references: [id])\n  voucherId String\n\n  // The user recieve the vouch\n  vouchee   User   @relation(\"Vouchee\", fields: [voucheeId], references: [id])\n  voucheeId String\n}\n",
  "inlineSchemaHash": "052047d6cda9288f7f4e23955526b0342b286d564fc33d03ec0f14b59c28172d",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creditScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"UpiTransaction\",\"relationName\":\"UpiTransactionToUser\"},{\"name\":\"recharges\",\"kind\":\"object\",\"type\":\"MobileRecharge\",\"relationName\":\"MobileRechargeToUser\"},{\"name\":\"vouchesGiven\",\"kind\":\"object\",\"type\":\"CommunityVouch\",\"relationName\":\"Voucher\"},{\"name\":\"vouchesReceived\",\"kind\":\"object\",\"type\":\"CommunityVouch\",\"relationName\":\"Vouchee\"}],\"dbName\":null},\"UpiTransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UpiTransactionToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"MobileRecharge\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MobileRechargeToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"CommunityVouch\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"voucher\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Voucher\"},{\"name\":\"voucherId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vouchee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Vouchee\"},{\"name\":\"voucheeId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

